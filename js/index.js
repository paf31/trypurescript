// Generated by purs bundle 0.11.6
var PS = {};
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS["Control.Semigroupoid"] = PS["Control.Semigroupoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var Category = function (Semigroupoid0, id) {
      this.Semigroupoid0 = Semigroupoid0;
      this.id = id;
  };
  var id = function (dict) {
      return dict.id;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["id"] = id;
  exports["categoryFn"] = categoryFn;
})(PS["Control.Category"] = PS["Control.Category"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["const"] = $$const;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
    "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
    "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Unit"];
  var Data_Show = PS["Data.Show"];
  exports["unit"] = $foreign.unit;
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Functor"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Unit = PS["Data.Unit"];        
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];        
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  };                      
  var apply = function (dict) {
      return dict.apply;
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["lift2"] = lift2;
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Apply = PS["Control.Apply"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative line 57, column 1 - line 57, column 63: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
})(PS["Control.Applicative"] = PS["Control.Applicative"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Bind"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var Discard = function (discard) {
      this.discard = discard;
  };
  var discard = function (dict) {
      return dict.discard;
  };                     
  var bind = function (dict) {
      return dict.bind;
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["discardUnit"] = discardUnit;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
    "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Unit = PS["Data.Unit"];        
  var monadEff = new Control_Monad.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Control_Bind.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Control_Apply.Apply(function () {
      return functorEff;
  }, Control_Monad.ap(monadEff));
  var applicativeEff = new Control_Applicative.Applicative(function () {
      return applyEff;
  }, $foreign.pureE);
  var functorEff = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (Monad0, liftEff) {
      this.Monad0 = Monad0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Control_Category.id(Control_Category.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["liftEff"] = liftEff;
  exports["MonadEff"] = MonadEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Prelude = PS["Prelude"];        
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($64) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($64)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
})(PS["Data.Newtype"] = PS["Data.Newtype"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Newtype = PS["Data.Newtype"];
  var Prelude = PS["Prelude"];
  var runContT = function (v) {
      return function (k) {
          return v(k);
      };
  };
  var functorContT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (v) {
              return function (k) {
                  return v(function (a) {
                      return k(f(a));
                  });
              };
          };
      });
  };
  var applyContT = function (dictApply) {
      return new Control_Apply.Apply(function () {
          return functorContT(dictApply.Functor0());
      }, function (v) {
          return function (v1) {
              return function (k) {
                  return v(function (g) {
                      return v1(function (a) {
                          return k(g(a));
                      });
                  });
              };
          };
      });
  };
  var bindContT = function (dictBind) {
      return new Control_Bind.Bind(function () {
          return applyContT(dictBind.Apply0());
      }, function (v) {
          return function (k) {
              return function (k$prime) {
                  return v(function (a) {
                      var v1 = k(a);
                      return v1(k$prime);
                  });
              };
          };
      });
  };
  var applicativeContT = function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
          return applyContT(dictApplicative.Apply0());
      }, function (a) {
          return function (k) {
              return k(a);
          };
      });
  };
  var monadContT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeContT(dictMonad.Applicative0());
      }, function () {
          return bindContT(dictMonad.Bind1());
      });
  };
  exports["runContT"] = runContT;
  exports["functorContT"] = functorContT;
  exports["applyContT"] = applyContT;
  exports["applicativeContT"] = applicativeContT;
  exports["bindContT"] = bindContT;
  exports["monadContT"] = monadContT;
})(PS["Control.Monad.Cont.Trans"] = PS["Control.Monad.Cont.Trans"] || {});
(function(exports) {
    "use strict";

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["error"] = $foreign.error;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.ready = function(func) {
      return function() {
          jQuery(document).ready(func);
      };
  };

  exports.select = function(selector) {
      return function() {
          return jQuery(selector);
      };
  };

  exports.attr = function(attrs) {
      return function(ob) {
          return function() {
              ob.attr(attrs);
          };
      };
  };

  exports.toggleClass = function(cls) {
      return function(ob) {
          return function() {
              ob.toggleClass(cls);
          };
      };
  };

  exports.setClass = function(cls) {
      return function(flag) {
          return function(ob) {
              return function() {
                  ob.toggleClass(cls, flag);
              };
          };
      };
  };

  exports.setProp = function(p) {
      return function(val) {
          return function(ob) {
              return function() {
                  ob.prop(p, val);
              };
          };
      };
  };

  exports.setValue = function(val) {
      return function(ob) {
          return function() {
              ob.val(val);
          };
      };
  };

  exports.toggle = function(ob) {
      return function() {
          ob.toggle();
      };
  };

  exports.setVisible = function(flag) {
      return function(ob) {
          return function() {
              ob.toggle(flag);
          };
      };
  };

  exports.on = function(evt) {
      return function(act) {
          return function(ob) {
              return function() {
                  ob.on(evt, function(e) {
                      act(e)(jQuery(this))();
                  });
              };
          };
      };
  };
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
    "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
    "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Eq"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var append = function (dict) {
      return dict.append;
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Eq = PS["Data.Eq"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];        
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS["Data.Ordering"] = PS["Data.Ordering"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];        
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Ord"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord_Unsafe = PS["Data.Ord.Unsafe"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Void = PS["Data.Void"];        
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  };                                
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var compare = function (dict) {
      return dict.compare;
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["ordInt"] = ordInt;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Bounded"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Unit = PS["Data.Unit"];        
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                                 
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS["Data.Boolean"] = PS["Data.Boolean"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Eq = PS["Data.Eq"];
  var Data_EuclideanRing = PS["Data.EuclideanRing"];
  var Data_Function = PS["Data.Function"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 219, column 1 - line 219, column 51: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.id(Control_Category.categoryFn));
  };
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];        
  var removeClass = function (cls) {
      return $foreign.setClass(cls)(false);
  };
  var hide = $foreign.setVisible(false);
  var display = $foreign.setVisible(true);
  exports["removeClass"] = removeClass;
  exports["hide"] = hide;
  exports["display"] = display;
  exports["ready"] = $foreign.ready;
  exports["select"] = $foreign.select;
  exports["attr"] = $foreign.attr;
  exports["toggleClass"] = $foreign.toggleClass;
  exports["setProp"] = $foreign.setProp;
  exports["setValue"] = $foreign.setValue;
  exports["on"] = $foreign.on;
})(PS["Control.Monad.Eff.JQuery"] = PS["Control.Monad.Eff.JQuery"] || {});
(function(exports) {
    "use strict";

  exports.random = Math.random;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.toStringAs = function (radix) {
    return function (i) {
      return i.toString(radix);
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
    "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.HeytingAlgebra"];
  var Data_Unit = PS["Data.Unit"];        
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };                 
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function(exports) {
  /* globals exports */
  "use strict";         

  exports.infinity = Infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Global"];
  exports["infinity"] = $foreign.infinity;
})(PS["Global"] = PS["Global"] || {});
(function(exports) {
    "use strict";        

  exports.floor = Math.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Math"];
  exports["floor"] = $foreign.floor;
})(PS["Math"] = PS["Math"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Int"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Boolean = PS["Data.Boolean"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Show = PS["Data.Show"];
  var Global = PS["Global"];
  var $$Math = PS["Math"];
  var Prelude = PS["Prelude"];
  var hexadecimal = 16;             
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var unsafeClamp = function (x) {
      if (x === Global.infinity) {
          return 0;
      };
      if (x === -Global.infinity) {
          return 0;
      };
      if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
          return Data_Bounded.top(Data_Bounded.boundedInt);
      };
      if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
          return Data_Bounded.bottom(Data_Bounded.boundedInt);
      };
      if (Data_Boolean.otherwise) {
          return Data_Maybe.fromMaybe(0)(fromNumber(x));
      };
      throw new Error("Failed pattern match at Data.Int line 64, column 1 - line 64, column 29: " + [ x.constructor.name ]);
  };
  var floor = function ($14) {
      return unsafeClamp($$Math.floor($14));
  };
  exports["fromNumber"] = fromNumber;
  exports["floor"] = floor;
  exports["hexadecimal"] = hexadecimal;
  exports["toNumber"] = $foreign.toNumber;
  exports["toStringAs"] = $foreign.toStringAs;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Random"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Int = PS["Data.Int"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semiring = PS["Data.Semiring"];
  var Prelude = PS["Prelude"];
  var randomInt = function (low) {
      return function (high) {
          return function __do() {
              var v = $foreign.random();
              var asNumber = ((Data_Int.toNumber(high) - Data_Int.toNumber(low)) + 1) * v + Data_Int.toNumber(low);
              return Data_Int.floor(asNumber);
          };
      };
  };
  exports["randomInt"] = randomInt;
})(PS["Control.Monad.Eff.Random"] = PS["Control.Monad.Eff.Random"] || {});
(function(exports) {
    "use strict";

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];
  exports["newRef"] = $foreign.newRef;
  exports["readRef"] = $foreign.readRef;
  exports["writeRef"] = $foreign.writeRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.setTimeout = function (ms) {
    return function (fn) {
      return function () {
        return setTimeout(fn, ms);
      };
    };
  };
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["setTimeout"] = $foreign.setTimeout;
})(PS["Control.Monad.Eff.Timer"] = PS["Control.Monad.Eff.Timer"] || {});
(function(exports) {
    "use strict";

  exports.mkEffFn1 = function mkEffFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.mkEffFn2 = function mkEffFn2(fn) {
    return function(a, b) {
      return fn(a)(b)();
    };
  };

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };

  exports.runEffFn4 = function runEffFn4(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function() {
              return fn(a, b, c, d);
            };
          };
        };
      };
    };
  };
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["mkEffFn1"] = $foreign.mkEffFn1;
  exports["mkEffFn2"] = $foreign.mkEffFn2;
  exports["runEffFn1"] = $foreign.runEffFn1;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn3"] = $foreign.runEffFn3;
  exports["runEffFn4"] = $foreign.runEffFn4;
})(PS["Control.Monad.Eff.Uncurried"] = PS["Control.Monad.Eff.Uncurried"] || {});
(function(exports) {
    "use strict";

  exports.unsafeCoerceEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  exports["unsafeCoerceEff"] = $foreign.unsafeCoerceEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var newtypeDisj = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Disj);
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["newtypeDisj"] = newtypeDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable line 129, column 1 - line 129, column 41: " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var fold = function (dictFoldable) {
      return function (dictMonoid) {
          return foldMap(dictFoldable)(dictMonoid)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($187) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($187));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
    "use strict";

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont(fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList(x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray(list) {
      var arr = [];
      var xs = list;
      while (xs !== emptyList) {
        arr.push(xs.head);
        xs = xs.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Data_Traversable_Accum = PS["Data.Traversable.Accum"];
  var Data_Traversable_Accum_Internal = PS["Data.Traversable.Accum.Internal"];
  var Prelude = PS["Prelude"];        
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return traverse(dictTraversable)(dictApplicative)(Control_Category.id(Control_Category.categoryFn));
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Data_Functor.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map((dictApplicative.Apply0()).Functor0()))(Control_Applicative.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 36, column 1 - line 36, column 45: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });                                                                                                     
  var fromRight = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar62) {
                  return $dollar62;
              };
          };
          return __unused(dictPartial)((function () {
              if (v instanceof Right) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Data.Either line 252, column 1 - line 252, column 52: " + [ v.constructor.name ]);
          })());
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 229, column 1 - line 229, column 64: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 79, column 1 - line 79, column 41: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["fromRight"] = fromRight;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Category = PS["Control.Category"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = PS["Control.Monad.Trans.Class"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Tuple = PS["Data.Tuple"];
  var Prelude = PS["Prelude"];        
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
})(PS["Control.Monad.Except.Trans"] = PS["Control.Monad.Except.Trans"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_Monad = PS["Control.Monad"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var App = function (x) {
      return x;
  };
  var semigroupApp = function (dictApply) {
      return function (dictSemigroup) {
          return new Data_Semigroup.Semigroup(function (v) {
              return function (v1) {
                  return Control_Apply.lift2(dictApply)(Data_Semigroup.append(dictSemigroup))(v)(v1);
              };
          });
      };
  };
  var newtypeApp = new Data_Newtype.Newtype(function (n) {
      return n;
  }, App);
  var applicativeApp = function (dictApplicative) {
      return dictApplicative;
  };
  exports["App"] = App;
  exports["newtypeApp"] = newtypeApp;
  exports["semigroupApp"] = semigroupApp;
  exports["applicativeApp"] = applicativeApp;
})(PS["Data.Functor.App"] = PS["Data.Functor.App"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Category = PS["Control.Category"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_App = PS["Data.Functor.App"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];        
  var Compose = function (x) {
      return x;
  };          
  var functorCompose = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  return Compose(Data_Functor.map(dictFunctor)(Data_Functor.map(dictFunctor1)(f))(v));
              };
          });
      };
  };
  var applyCompose = function (dictApply) {
      return function (dictApply1) {
          return new Control_Apply.Apply(function () {
              return functorCompose(dictApply.Functor0())(dictApply1.Functor0());
          }, function (v) {
              return function (v1) {
                  return Compose(Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Control_Apply.apply(dictApply1))(v))(v1));
              };
          });
      };
  };
  var applicativeCompose = function (dictApplicative) {
      return function (dictApplicative1) {
          return new Control_Applicative.Applicative(function () {
              return applyCompose(dictApplicative.Apply0())(dictApplicative1.Apply0());
          }, function ($75) {
              return Compose(Control_Applicative.pure(dictApplicative)(Control_Applicative.pure(dictApplicative1)($75)));
          });
      };
  };
  exports["Compose"] = Compose;
  exports["functorCompose"] = functorCompose;
  exports["applyCompose"] = applyCompose;
  exports["applicativeCompose"] = applicativeCompose;
})(PS["Data.Functor.Compose"] = PS["Data.Functor.Compose"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var Control_Monad_Reader_Trans = PS["Control.Monad.Reader.Trans"];
  var Control_Monad_Writer_Trans = PS["Control.Monad.Writer.Trans"];
  var Control_Plus = PS["Control.Plus"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_Compose = PS["Data.Functor.Compose"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Unit = PS["Data.Unit"];
  var Prelude = PS["Prelude"];        
  var ParCont = function (x) {
      return x;
  };
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var unsafeWithRef = Control_Monad_Eff_Unsafe.unsafeCoerceEff;
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  var monadParExceptT = function (dictParallel) {
      return new Parallel(function () {
          return Data_Functor_Compose.applicativeCompose(dictParallel.Applicative1())(Data_Either.applicativeEither);
      }, function () {
          return Control_Monad_Except_Trans.monadExceptT(dictParallel.Monad0());
      }, function (v) {
          return parallel(dictParallel)(v);
      }, function (v) {
          return sequential(dictParallel)(v);
      });
  };
  var monadParParCont = function (dictMonadEff) {
      return new Parallel(function () {
          return applicativeParCont(dictMonadEff);
      }, function () {
          return Control_Monad_Cont_Trans.monadContT(dictMonadEff.Monad0());
      }, ParCont, function (v) {
          return v;
      });
  };
  var functorParCont = function (dictMonadEff) {
      return new Data_Functor.Functor(function (f) {
          return function ($54) {
              return parallel(monadParParCont(dictMonadEff))(Data_Functor.map(Control_Monad_Cont_Trans.functorContT((((dictMonadEff.Monad0()).Bind1()).Apply0()).Functor0()))(f)(sequential(monadParParCont(dictMonadEff))($54)));
          };
      });
  };
  var applyParCont = function (dictMonadEff) {
      return new Control_Apply.Apply(function () {
          return functorParCont(dictMonadEff);
      }, function (v) {
          return function (v1) {
              return ParCont(function (k) {
                  return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v2) {
                      return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value))))(function (v3) {
                          return Control_Bind.discard(Control_Bind.discardUnit)((dictMonadEff.Monad0()).Bind1())(Control_Monad_Cont_Trans.runContT(v)(function (a) {
                              return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v3))))(function (v4) {
                                  if (v4 instanceof Data_Maybe.Nothing) {
                                      return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v2)(new Data_Maybe.Just(a))));
                                  };
                                  if (v4 instanceof Data_Maybe.Just) {
                                      return k(a(v4.value0));
                                  };
                                  throw new Error("Failed pattern match at Control.Parallel.Class line 81, column 7 - line 83, column 26: " + [ v4.constructor.name ]);
                              });
                          }))(function () {
                              return Control_Monad_Cont_Trans.runContT(v1)(function (b) {
                                  return Control_Bind.bind((dictMonadEff.Monad0()).Bind1())(Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.readRef(v2))))(function (v4) {
                                      if (v4 instanceof Data_Maybe.Nothing) {
                                          return Control_Monad_Eff_Class.liftEff(dictMonadEff)(unsafeWithRef(Control_Monad_Eff_Ref.writeRef(v3)(new Data_Maybe.Just(b))));
                                      };
                                      if (v4 instanceof Data_Maybe.Just) {
                                          return k(v4.value0(b));
                                      };
                                      throw new Error("Failed pattern match at Control.Parallel.Class line 87, column 7 - line 89, column 26: " + [ v4.constructor.name ]);
                                  });
                              });
                          });
                      });
                  });
              });
          };
      });
  };
  var applicativeParCont = function (dictMonadEff) {
      return new Control_Applicative.Applicative(function () {
          return applyParCont(dictMonadEff);
      }, function ($55) {
          return parallel(monadParParCont(dictMonadEff))(Control_Applicative.pure(Control_Monad_Cont_Trans.applicativeContT((dictMonadEff.Monad0()).Applicative0()))($55));
      });
  };
  exports["Parallel"] = Parallel;
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["ParCont"] = ParCont;
  exports["monadParExceptT"] = monadParExceptT;
  exports["functorParCont"] = functorParCont;
  exports["applyParCont"] = applyParCont;
  exports["applicativeParCont"] = applicativeParCont;
  exports["monadParParCont"] = monadParParCont;
})(PS["Control.Parallel.Class"] = PS["Control.Parallel.Class"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Category = PS["Control.Category"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Traversable = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var parTraverse = function (dictParallel) {
      return function (dictTraversable) {
          return function (f) {
              return function ($18) {
                  return Control_Parallel_Class.sequential(dictParallel)(Data_Traversable.traverse(dictTraversable)(dictParallel.Applicative1())(function ($19) {
                      return Control_Parallel_Class.parallel(dictParallel)(f($19));
                  })($18));
              };
          };
      };
  };
  exports["parTraverse"] = parTraverse;
})(PS["Control.Parallel"] = PS["Control.Parallel"] || {});
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
    "use strict";

  exports.alert = function (str) {
    return function (window) {
      return function () {
        window.alert(str);
        return {};
      };
    };
  };

  exports.confirm = function (str) {
    return function (window) {
      return function () {
        return window.confirm(str);
      };
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";        

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Show = PS["Data.Show"];
  var Prelude = PS["Prelude"];                                          
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_WebStorage_Types = PS["DOM.WebStorage.Types"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Prelude = PS["Prelude"];
  exports["alert"] = $foreign.alert;
  exports["confirm"] = $foreign.confirm;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
    "use strict";

  exports.length = function (s) {
    return s.length;
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.String"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_Show = PS["Data.Show"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var Prelude = PS["Prelude"];
  exports["length"] = $foreign.length;
  exports["drop"] = $foreign.drop;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
    "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor = PS["Data.Functor"];
  var Data_HeytingAlgebra = PS["Data.HeytingAlgebra"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Prelude = PS["Prelude"];        
  var RegexFlags = (function () {
      function RegexFlags(value0) {
          this.value0 = value0;
      };
      RegexFlags.create = function (value0) {
          return new RegexFlags(value0);
      };
      return RegexFlags;
  })();
  var global = new RegexFlags({
      global: true,
      ignoreCase: false,
      multiline: false,
      sticky: false,
      unicode: false
  });
  exports["RegexFlags"] = RegexFlags;
  exports["global"] = global;
})(PS["Data.String.Regex.Flags"] = PS["Data.String.Regex.Flags"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Show = PS["Data.Show"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Prelude = PS["Prelude"];                                                    
  var renderFlags = function (v) {
      return (function () {
          if (v.value0.global) {
              return "g";
          };
          return "";
      })() + ((function () {
          if (v.value0.ignoreCase) {
              return "i";
          };
          return "";
      })() + ((function () {
          if (v.value0.multiline) {
              return "m";
          };
          return "";
      })() + ((function () {
          if (v.value0.sticky) {
              return "y";
          };
          return "";
      })() + (function () {
          if (v.value0.unicode) {
              return "u";
          };
          return "";
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
      };
  };
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["replace"] = $foreign.replace;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by purs version 0.11.6
  "use strict";
  var Data_Either = PS["Data.Either"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Partial_Unsafe = PS["Partial.Unsafe"];        
  var unsafeRegex = function (s) {
      return function (f) {
          return Data_Either.fromRight()(Data_String_Regex.regex(s)(f));
      };
  };
  exports["unsafeRegex"] = unsafeRegex;
})(PS["Data.String.Regex.Unsafe"] = PS["Data.String.Regex.Unsafe"] || {});
(function(exports) {
    "use strict";

  exports.get = function(uri, done, fail) {
    $.get(uri).done(done).fail(function(err) {
      fail(err.statusText);
    });
  };

  exports.getGistById = function(id, done, fail) {
    $.ajax({
      url: 'https://api.github.com/gists/' + id,
      dataType: 'json'
    }).done(done).fail(function(err) {
      fail(err.statusText);
    });
  }

  exports.getQueryString = function(key) {
    return $.QueryString[key];
  };

  exports.setQueryString = function(key, value) {
    $.QueryString[key] = value;
    $.setQueryParameters($.QueryString);
  };

  exports.click = function(jq) {
    jq.click();
  };

  exports.filter = function(jq, sel) {
    return jq.filter(sel);
  };

  exports.getValue = function(jq) {
    return jq.val();
  };

  exports.navigateTo = function(url) {
    return function() {
      location.href = url;
    };
  };

  exports.cacheCurrentCode = function(backend) {
    if (window.localStorage) {
      var sessionId = $.QueryString['session'];
      var code = $('#code_textarea').val();

      localStorage.setItem(sessionId, code);
      localStorage.setItem(sessionId + 'backend', backend.backend);
    }
  };

  exports.tryRestoreCachedCode = function(sessionId) {
    if (window.localStorage) {
      var code = localStorage.getItem(sessionId);
      var backend = localStorage.getItem(sessionId + 'backend');
      if (backend) {
        $('#backend_' + backend).click();
      }
      if (code) {
        $('#code_textarea').val(code);
        return backend;
      }
    }
  };

  var editor, cleanupActions = [];

  exports.setupEditorWith = function(pursImports, name, ta_name, lang) {

    editor = ace.edit(name);

    editor.renderer.setShowGutter(true);
    editor.setFontSize(13);
    editor.setShowPrintMargin(false);

    var session = editor.getSession();

    session.setMode(lang);
    session.setValue($('#' + ta_name).val());
    session.setOptions({
      tabSize: 2,
      useSoftTabs: true
    });

    session.on('change', _.debounce(function() {

      $('#' + ta_name).val(session.getValue());

      var backend = pursImports.getBackend($('input[name=backend_inputs]').filter(':checked').val());
      exports.cacheCurrentCode(backend);
      if ($("#auto_compile").is(":checked")) {
        exports.compile(pursImports);
      }
    }, 750));

    exports.compile(pursImports);
  };

  exports.execute = function(js, bundle, backend) {

    var $iframe = $('<iframe id="output-iframe">');

    $('#column2')
      .empty()
      .append($iframe);

    var iframe = $iframe.get(0).contentWindow.document;
    iframe.open();
    iframe.write(
      ['<!DOCTYPE html>'
      , '<html>'
      , '  <head>'
      , '    <meta content="text/html;charset=utf-8" http-equiv="Content-Type">'
      , '    <meta content="utf-8" http-equiv="encoding">'
      , '    <meta name="viewport" content="width=device-width, initial-scale=1.0">'
      , '    <title>Try PureScript!</title>'
      , '    <link rel="stylesheet" href="css/style.css">'
      , backend.extra_styling
      , '  </head>'
      , '  <body>'
      , backend.extra_body
      , '  </body>'
      , '</html>'
      ].join('\n')
    );
    iframe.close();

    // Replace any require() statements with the PS['...'] form using a regex substitution.
    var replaced = js.replace(/require\("[^"]*"\)/g, function(s) {

      return "PS['" + s.substring(12, s.length - 2) + "']";
    });

    // Wrap the compiled code so that main() runs.
    var wrapped =
      [ 'var module = {};'
      , '(function(module) {'
      , replaced
      , '})(module);'
      , 'module.exports.main && module.exports.main();'
      ].join('\n');

    var scripts = [bundle, wrapped].join("\n");

    var script = iframe.createElement('script');
    script.appendChild(iframe.createTextNode(scripts));

    $('iframe').ready(function() {
      var checkExists = setInterval(function() {
        var body = iframe.getElementsByTagName('body')[0];
        if (body) {
          body.onclick = function() {
            exports.hideMenus();
          };
          body.appendChild(script);
          clearInterval(checkExists);
        }
      }, 100);
    });
  };

  exports.compile = function(pursImports) {

    var backend = pursImports.getBackend($('input[name=backend_inputs]').filter(':checked').val());

    $('#column2')
      .empty()
      .append($("<div>").addClass("loading").append("Loading..."));

    var code = $('#code_textarea').val();

    $.ajax({
      url: backend.endpoint + '/compile',
      dataType: 'json',
      data: code,
      method: 'POST',
      contentType: 'text/plain',
      success: function(res) {

        for (var i = 0; i < cleanupActions.length; i++) {
          cleanupActions[i]();
        }

        cleanupActions = [];

        if (res.error) {
          switch (res.error.tag) {
            case "CompilerErrors":
              var errors = res.error.contents;

              $('#column2').empty();

              for (var i = 0; i < errors.length; i++) {
                var error = errors[i];
                $('#column2')
                  .append($('<h1>').addClass('error-banner').append("Error " + (i + 1) + " of " + errors.length))
                  .append($('<pre>').append($('<code>').append(error.message)));

                var startColumn = error.position.startColumn;
                var endColumn = error.position.endColumn;

                if (error.position.startLine === error.position.endLine && endColumn <= error.position.startColumn) {
                  // Make sure the range is at least one character wide.
                  if (startColumn > 0) {
                    startColumn = endColumn - 1;
                  } else {
                    endColumn = startColumn + 1;
                  }
                }

                // Add an error marker
                var range = new(ace.require("ace/range").Range)(
                   error.position.startLine - 1, startColumn - 1, error.position.endLine - 1, endColumn - 1);

                var marker = editor.session.addMarker(range, "error", "text", true);

                editor.session.addGutterDecoration(error.position.startLine - 1, "gutter-error");

                cleanupActions.push((function(marker, line) {
                  return function() {
                    editor.session.removeMarker(marker);
                    editor.session.removeGutterDecoration(line, "gutter-error");
                  };
                })(marker, error.position.startLine - 1));
              }

              break;
            case "OtherError":
              $('#column2')
                .empty()
                .append($('<pre>').append($('<code>').append(res.error.contents)));
              break;
          }
        } else if (res.js) {
          if ($("#showjs").is(":checked")) {
            $('#column2')
              .empty()
              .append($('<pre>').append($('<code>').text(res.js)));
          } else {
            (backend.bundleAndExecute || defaultBundleAndExecute)(res.js, backend);
          }
        }
      },
      error: function(res) {
        $('#column2')
          .empty()
          .append($('<pre>').append($('<code>').append(res.responseText)));
        console.warn("failed to communicate with compilation server", res);
      }
    });
  };

  exports.tryLoadFileFromGist = function(gistInfo, filename, done, fail) {
    if (gistInfo.files && gistInfo.files.hasOwnProperty(filename)) {
      var url = gistInfo.files[filename].raw_url;

      return $.ajax({
        url: url,
        dataType: 'text'
      }).done(done).fail(function(err) {
        fail(err.statusText);
      });
    } else {
      fail("Gist does not contain a file named " + filename);
    }
  };

  exports.uploadGist = function(content, done, fail) {
    var data = {
      "description": "Published with try.purescript.org",
      "public": false,
      "files": {
        "Main.purs": {
          "content": content
        }
      }
    };

    $.ajax({
      url: 'https://api.github.com/gists',
      type: 'POST',
      dataType: 'json',
      data: JSON.stringify(data)
    }).success(function(e) {
      done(e.id);
    }).error(function(e) {
      fail(e);
    });
  };
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
    "use strict";
  var $foreign = PS["Main"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Cont_Trans = PS["Control.Monad.Cont.Trans"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_JQuery = PS["Control.Monad.Eff.JQuery"];
  var Control_Monad_Eff_Random = PS["Control.Monad.Eff.Random"];
  var Control_Monad_Eff_Timer = PS["Control.Monad.Eff.Timer"];
  var Control_Monad_Eff_Uncurried = PS["Control.Monad.Eff.Uncurried"];
  var Control_Monad_Except_Trans = PS["Control.Monad.Except.Trans"];
  var Control_Parallel = PS["Control.Parallel"];
  var Control_Parallel_Class = PS["Control.Parallel.Class"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var Data_Either = PS["Data.Either"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Functor = PS["Data.Functor"];
  var Data_Functor_App = PS["Data.Functor.App"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Newtype = PS["Data.Newtype"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Ring = PS["Data.Ring"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Semiring = PS["Data.Semiring"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_String_Regex_Flags = PS["Data.String.Regex.Flags"];
  var Data_String_Regex_Unsafe = PS["Data.String.Regex.Unsafe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Unit = PS["Data.Unit"];
  var Partial_Unsafe = PS["Partial.Unsafe"];
  var Prelude = PS["Prelude"];        
  var JS = function (x) {
      return x;
  };
  var BackendConfig = function (x) {
      return x;
  };

  // | A record of functions that we export to the foreign JavaScript code
  var ExportedFunctions = function (x) {
      return x;
  };
  var Core = (function () {
      function Core() {

      };
      Core.value = new Core();
      return Core;
  })();
  var Thermite = (function () {
      function Thermite() {

      };
      Thermite.value = new Thermite();
      return Thermite;
  })();
  var Slides = (function () {
      function Slides() {

      };
      Slides.value = new Slides();
      return Slides;
  })();
  var Mathbox = (function () {
      function Mathbox() {

      };
      Mathbox.value = new Mathbox();
      return Mathbox;
  })();
  var Behaviors = (function () {
      function Behaviors() {

      };
      Behaviors.value = new Behaviors();
      return Behaviors;
  })();
  var Flare = (function () {
      function Flare() {

      };
      Flare.value = new Flare();
      return Flare;
  })();

  // | A wrapper for `uploadGist` which uses `ContT`.
  var uploadGistContT = function (content) {
      return function (k) {
          return Control_Monad_Eff_Uncurried.runEffFn3($foreign.uploadGist)(content)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($100) {
              return k(Data_Either.Right.create($100));
          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($101) {
              return k(Data_Either.Left.create($101));
          }));
      };
  };
  var tryRestoreCachedCodeMaybe = function ($102) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Monad_Eff_Uncurried.runEffFn1($foreign.tryRestoreCachedCode)($102));
  };
  var tryLoadFileFromGistContT = function (gi) {
      return function (filename) {
          return function (k) {
              return Control_Monad_Eff_Uncurried.runEffFn4($foreign.tryLoadFileFromGist)(gi)(filename)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($103) {
                  return k(Data_Either.Right.create($103));
              }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($104) {
                  return k(Data_Either.Left.create($104));
              }));
          };
      };
  };
  var randomGuid = (function () {
      var padLeft = function (s) {
          return Data_String.drop(Data_String.length(s) - 1 | 0)("000" + s);
      };
      var s4 = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($105) {
          return padLeft(Data_Int.toStringAs(Data_Int.hexadecimal)($105));
      })(Control_Monad_Eff_Random.randomInt(0)(256 * 256 | 0));
      return Data_Newtype.unwrap(Data_Functor_App.newtypeApp)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(Control_Applicative.pure(Data_Functor_App.applicativeApp(Control_Monad_Eff.applicativeEff))("-"))(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(Control_Applicative.pure(Data_Functor_App.applicativeApp(Control_Monad_Eff.applicativeEff))("-"))(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(Control_Applicative.pure(Data_Functor_App.applicativeApp(Control_Monad_Eff.applicativeEff))("-"))(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(Control_Applicative.pure(Data_Functor_App.applicativeApp(Control_Monad_Eff.applicativeEff))("-"))(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(Data_Semigroup.append(Data_Functor_App.semigroupApp(Control_Monad_Eff.applyEff)(Data_Semigroup.semigroupString))(s4)(s4))))))))))));
  })();

  // | Hide the drop down menus
  var hideMenus = function __do() {
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#menu"))(Control_Monad_Eff_JQuery.removeClass("show"))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_mode"))(Control_Monad_Eff_JQuery.removeClass("show-sub-menu"))();
      return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#backend"))(Control_Monad_Eff_JQuery.removeClass("show-sub-menu"))();
  };
  var getValueMaybe = function ($106) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Monad_Eff_Uncurried.runEffFn1($foreign.getValue)($106));
  };

  // | Create a new Gist using the current content
  var publishNewGist = function __do() {
      var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.confirm(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")([ "Do you really want to publish this code as an anonymous Gist?", "", "Note: this code will be available to anyone with a link to the Gist." ])))();
      return Control_Applicative.when(Control_Monad_Eff.applicativeEff)(v)(function __do() {
          var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString))(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#code_textarea"))(getValueMaybe))();
          return Control_Monad_Cont_Trans.runContT(Control_Monad_Except_Trans.runExceptT(uploadGistContT(v1)))(function (v2) {
              if (v2 instanceof Data_Either.Left) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.alert("Failed to create gist"))();
                      return Control_Monad_Eff_Console.error("Failed to create gist: " + v2.value0)();
                  };
              };
              if (v2 instanceof Data_Either.Right) {
                  return function __do() {
                      var v3 = (function __do() {
                          var jq = Control_Monad_Eff_JQuery.select("input[name=backend_inputs]")();
                          return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Uncurried.runEffFn2($foreign.filter)(jq)(":checked"))(getValueMaybe)();
                      })();
                      Control_Monad_Eff_Uncurried.runEffFn2($foreign.setQueryString)("gist")(v2.value0)();
                      return Control_Monad_Eff_Uncurried.runEffFn2($foreign.setQueryString)("backend")(Data_Maybe.fromMaybe("core")(v3))();
                  };
              };
              throw new Error("Failed pattern match at Main line 180, column 7 - line 189, column 72: " + [ v2.constructor.name ]);
          })();
      })();
  };
  var getQueryStringMaybe = function ($107) {
      return Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Control_Monad_Eff_Uncurried.runEffFn1($foreign.getQueryString)($107));
  };

  // | Look up the session by ID, or create a new session ID.
  var setupSession = Control_Monad_Eff_Uncurried.mkEffFn1(function (k) {
      return function __do() {
          var v = getQueryStringMaybe("session")();
          if (v instanceof Data_Maybe.Just) {
              return Control_Monad_Eff_Uncurried.runEffFn1(k)(v.value0)();
          };
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(randomGuid)(Control_Monad_Eff_Uncurried.runEffFn2($foreign.setQueryString)("session"))();
          };
          throw new Error("Failed pattern match at Main line 195, column 3 - line 199, column 1: " + [ v.constructor.name ]);
      };
  });
  var getJS = function (v) {
      return v;
  };

  // | A wrapper for `getGistById` which uses `ContT`.
  var getGistByIdContT = function (id_) {
      return function (k) {
          return Control_Monad_Eff_Uncurried.runEffFn3($foreign.getGistById)(id_)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($108) {
              return k(Data_Either.Right.create($108));
          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($109) {
              return k(Data_Either.Left.create($109));
          }));
      };
  };

  // | A wrapper for `get` which uses `ContT`.
  var getContT = function (uri) {
      return function (k) {
          return Control_Monad_Eff_Uncurried.runEffFn3($foreign.get)(uri)(Control_Monad_Eff_Uncurried.mkEffFn1(function ($110) {
              return k(Data_Either.Right.create($110));
          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function ($111) {
              return k(Data_Either.Left.create($111));
          }));
      };
  };
  var eqBackend = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Core && y instanceof Core) {
              return true;
          };
          if (x instanceof Thermite && y instanceof Thermite) {
              return true;
          };
          if (x instanceof Slides && y instanceof Slides) {
              return true;
          };
          if (x instanceof Mathbox && y instanceof Mathbox) {
              return true;
          };
          if (x instanceof Behaviors && y instanceof Behaviors) {
              return true;
          };
          if (x instanceof Flare && y instanceof Flare) {
              return true;
          };
          return false;
      };
  });
  var ordBackend = new Data_Ord.Ord(function () {
      return eqBackend;
  }, function (x) {
      return function (y) {
          if (x instanceof Core && y instanceof Core) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Core) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Core) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Thermite && y instanceof Thermite) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Thermite) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Thermite) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Slides && y instanceof Slides) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Slides) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Slides) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Mathbox && y instanceof Mathbox) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Mathbox) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Mathbox) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Behaviors && y instanceof Behaviors) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Behaviors) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Behaviors) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Flare && y instanceof Flare) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Main line 344, column 8 - line 344, column 42: " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var defaultBundleAndExecute = Control_Monad_Eff_Uncurried.mkEffFn2(function (js) {
      return function (v) {
          return Control_Monad_Eff_Uncurried.runEffFn3($foreign.get)(v.endpoint + "/bundle")(Control_Monad_Eff_Uncurried.mkEffFn1(function (bundle) {
              return Control_Monad_Eff_Uncurried.runEffFn3($foreign.execute)(js)(bundle)(v);
          }))(Control_Monad_Eff_Uncurried.mkEffFn1(function (err) {
              return Control_Monad_Eff_Console.error("Unable to load JS bundle: " + err);
          }));
      };
  });

  // | Update the view mode based on the menu selection
  var changeViewMode = Control_Monad_Eff_Uncurried.mkEffFn1(function (jq) {
      return function __do() {
          var v = Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Uncurried.runEffFn2($foreign.filter)(jq)(":checked"))(getValueMaybe)();
          if (v instanceof Data_Maybe.Just && v.value0 === "code") {
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column1"))(Control_Monad_Eff_JQuery.display)();
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column2"))(Control_Monad_Eff_JQuery.hide)();
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs_label"))(Control_Monad_Eff_JQuery.hide)();
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs"))(Control_Monad_Eff_JQuery.hide)();
          };
          if (v instanceof Data_Maybe.Just && v.value0 === "output") {
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column1"))(Control_Monad_Eff_JQuery.hide)();
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column2"))(Control_Monad_Eff_JQuery.display)();
              Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs_label"))(Control_Monad_Eff_JQuery.display)();
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs"))(Control_Monad_Eff_JQuery.display)();
          };
          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column1"))(Control_Monad_Eff_JQuery.display)();
          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#column2"))(Control_Monad_Eff_JQuery.display)();
          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs_label"))(Control_Monad_Eff_JQuery.display)();
          return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs"))(Control_Monad_Eff_JQuery.display)();
      };
  });
  var bundleAndExecuteThermite = Control_Monad_Eff_Uncurried.mkEffFn2(function (js) {
      return function (v) {
          var onComplete = function (dictPartial) {
              return function (v1) {
                  var __unused = function (dictPartial1) {
                      return function ($dollar37) {
                          return $dollar37;
                      };
                  };
                  return __unused(dictPartial)((function () {
                      if (v1 instanceof Data_Either.Left) {
                          return Control_Monad_Eff_Console.error("Unable to load JS bundle: " + v1.value0);
                      };
                      if (v1 instanceof Data_Either.Right && v1.value0.length === 4) {
                          var replaced = Data_String_Regex.replace(Data_String_Regex_Unsafe.unsafeRegex("require\\(\"react-dom\\/server\"\\)")(Data_String_Regex_Flags.global))("window.ReactDOM")(Data_String_Regex.replace(Data_String_Regex_Unsafe.unsafeRegex("require\\(\"react-dom\"\\)")(Data_String_Regex_Flags.global))("window.ReactDOM")(Data_String_Regex.replace(Data_String_Regex_Unsafe.unsafeRegex("require\\(\"react\"\\)")(Data_String_Regex_Flags.global))("window.React")(v1["value0"][3])));
                          return Control_Monad_Eff_Uncurried.runEffFn3($foreign.execute)(js)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\x0a")([ v1["value0"][0], v1["value0"][1], v1["value0"][2], replaced ]))(v);
                      };
                      throw new Error("Failed pattern match at Main line 80, column 9 - line 85, column 33: " + [ v1.constructor.name ]);
                  })());
              };
          };
          var getAll = Control_Parallel.parTraverse(Control_Parallel_Class.monadParExceptT(Control_Parallel_Class.monadParParCont(Control_Monad_Eff_Class.monadEffEff)))(Data_Traversable.traversableArray)(getContT)([ "js/console.js", "js/react.min.js", "js/react-dom.min.js", v.endpoint + "/bundle" ]);
          return Control_Monad_Cont_Trans.runContT(Control_Monad_Except_Trans.runExceptT(getAll))(onComplete());
      };
  });
  var getBackend = function (v) {
      if (v instanceof Core) {
          return {
              backend: "core",
              endpoint: "https://compile.purescript.org/try",
              mainGist: "b57a766d417e109785540d584266fc33",
              extra_styling: "",
              extra_body: "",
              bundleAndExecute: defaultBundleAndExecute
          };
      };
      if (v instanceof Thermite) {
          return {
              backend: "thermite",
              endpoint: "https://compile.purescript.org/thermite",
              mainGist: "85383bb058471109cfef379bbb6bc11c",
              extra_styling: "<link rel=\"stylesheet\" href=\"//maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\">",
              extra_body: "<div id=\"app\"></div>",
              bundleAndExecute: bundleAndExecuteThermite
          };
      };
      if (v instanceof Slides) {
          return {
              backend: "slides",
              endpoint: "https://compile.purescript.org/slides",
              mainGist: "c62b5778a6a5f2bcd32dd97b294c068a",
              extra_styling: "<link rel=\"stylesheet\" href=\"css/slides.css\">",
              extra_body: "<div id=\"main\"></div>",
              bundleAndExecute: defaultBundleAndExecute
          };
      };
      if (v instanceof Mathbox) {
          return {
              backend: "mathbox",
              endpoint: "https://compile.purescript.org/purescript-mathbox",
              mainGist: "aeecffd458fa8a365b4af3b3cd9d7759",
              extra_styling: Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "<script src=\"js/mathbox-bundle.js\"></script>", "<link rel=\"stylesheet\" href=\"css/mathbox.css\">" ]),
              extra_body: "",
              bundleAndExecute: defaultBundleAndExecute
          };
      };
      if (v instanceof Behaviors) {
          return {
              backend: "behaviors",
              endpoint: "https://compile.purescript.org/behaviors",
              mainGist: "ff1e87f0872d2d891e77d209d8f7706d",
              extra_styling: "",
              extra_body: "<canvas id=\"canvas\" width=\"800\" height=\"600\"></canvas>",
              bundleAndExecute: defaultBundleAndExecute
          };
      };
      if (v instanceof Flare) {
          return {
              backend: "flare",
              endpoint: "https://compile.purescript.org/flare",
              mainGist: "4f54d6dd213caa54d736ead597e17fee",
              extra_styling: "<link rel=\"stylesheet\" href=\"css/flare.css\">",
              extra_body: Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([ "<div id=\"controls\"></div>", "<div id=\"output\"></div>", "<div id=\"tests\"></div>", "<canvas id=\"canvas\" width=\"800\" height=\"600\"></canvas>" ]),
              bundleAndExecute: defaultBundleAndExecute
          };
      };
      throw new Error("Failed pattern match at Main line 346, column 1 - line 346, column 39: " + [ v.constructor.name ]);
  };
  var backendToString = function (v) {
      if (v instanceof Core) {
          return "core";
      };
      if (v instanceof Thermite) {
          return "thermite";
      };
      if (v instanceof Slides) {
          return "slides";
      };
      if (v instanceof Mathbox) {
          return "mathbox";
      };
      if (v instanceof Behaviors) {
          return "behaviors";
      };
      if (v instanceof Flare) {
          return "flare";
      };
      throw new Error("Failed pattern match at Main line 335, column 1 - line 335, column 37: " + [ v.constructor.name ]);
  };
  var backendFromString = function (dictPartial) {
      return function (v) {
          var __unused = function (dictPartial1) {
              return function ($dollar42) {
                  return $dollar42;
              };
          };
          return __unused(dictPartial)((function () {
              if (v === "core") {
                  return Core.value;
              };
              if (v === "thermite") {
                  return Thermite.value;
              };
              if (v === "slides") {
                  return Slides.value;
              };
              if (v === "mathbox") {
                  return Mathbox.value;
              };
              if (v === "behaviors") {
                  return Behaviors.value;
              };
              if (v === "flare") {
                  return Flare.value;
              };
              throw new Error("Failed pattern match at Main line 327, column 1 - line 327, column 50: " + [ v.constructor.name ]);
          })());
      };
  };
  var getBackendFromString = function (s) {
      return getBackend(backendFromString()(s));
  };
  var exportedFunctions = {
      getBackend: getBackendFromString
  };

  // | Read query string options and update the state accordingly
  var loadOptions = Control_Monad_Eff_Uncurried.mkEffFn1(function (v) {
      return function __do() {
          Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#backend_" + v.backend))(Control_Monad_Eff_JQuery.attr({
              checked: "checked"
          }))();
          var v1 = getQueryStringMaybe("view")();
          (function () {
              if (v1 instanceof Data_Maybe.Just && Data_Foldable.elem(Data_Foldable.foldableArray)(Data_Eq.eqString)(v1.value0)([ "sidebyside", "code", "output" ])) {
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_" + v1.value0))($foreign.click);
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          })()();
          var v2 = getQueryStringMaybe("js")();
          (function () {
              if (v2 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("input:checkbox[name=showjs]"))(Control_Monad_Eff_JQuery.setProp("checked")(v2.value0 === "true"));
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          })()();
          var v3 = getQueryStringMaybe("compile")();
          (function () {
              if (v3 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("input:checkbox[name=auto_compile]"))(Control_Monad_Eff_JQuery.setProp("checked")(v3.value0 === "true"));
              };
              return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit);
          })()();
          var v4 = getQueryStringMaybe("gist")();
          (function () {
              if (v4 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_gist"))(Control_Monad_Eff_JQuery.attr({
                      href: "https://gist.github.com/" + v4.value0
                  }));
              };
              if (v4 instanceof Data_Maybe.Nothing) {
                  return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_gist_li"))(Control_Monad_Eff_JQuery.hide);
              };
              throw new Error("Failed pattern match at Main line 290, column 3 - line 292, column 47: " + [ v4.constructor.name ]);
          })()();
          return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("input[name=backend_inputs]"))(Control_Monad_Eff_JQuery.on("change")(function (e) {
              return function (jq) {
                  return function __do() {
                      var v5 = Data_Functor.map(Control_Monad_Eff.functorEff)(getBackendFromString)(Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.fromMaybe("core"))(Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Uncurried.runEffFn2($foreign.filter)(jq)(":checked"))(getValueMaybe)))();
                      var v6 = Control_Bind.bind(Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.confirm("Replace your current code with the " + (v5.backend + " backend sample code?")))();
                      (function () {
                          if (v6) {
                              return $foreign.navigateTo("?backend=" + v5.backend);
                          };
                          return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Eff_Timer.setTimeout(1000)(function __do() {
                              Control_Monad_Eff_Uncurried.runEffFn1($foreign.compile)(exportedFunctions)();
                              return Control_Monad_Eff_Uncurried.runEffFn1($foreign.cacheCurrentCode)(v5)();
                          }));
                      })()();
                      return hideMenus();
                  };
              };
          }))();
      };
  });
  var setupEditor = Control_Monad_Eff_Uncurried.mkEffFn2(function (exports) {
      return function (backend) {
          return function __do() {
              Control_Monad_Eff_Uncurried.runEffFn1(loadOptions)(backend)();
              Control_Monad_Eff_Uncurried.runEffFn4($foreign.setupEditorWith)(exports)("code")("code_textarea")("ace/mode/haskell")();
              return Control_Monad_Eff_Uncurried.runEffFn1($foreign.cacheCurrentCode)(backend)();
          };
      };
  });
  var loadFromGist = Control_Monad_Eff_Uncurried.mkEffFn2(function (id_) {
      return function (backend) {
          return Control_Monad_Cont_Trans.runContT(Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(Control_Monad_Cont_Trans.monadContT(Control_Monad_Eff.monadEff)))(getGistByIdContT(id_))(function (gi) {
              return tryLoadFileFromGistContT(gi)("Main.purs");
          })))(function (v) {
              if (v instanceof Data_Either.Left) {
                  return function __do() {
                      Control_Monad_Eff_Console.error("Unable to load gist metadata or contents: " + v.value0)();
                      return Control_Monad_Eff_Uncurried.runEffFn2(setupEditor)(exportedFunctions)(backend)();
                  };
              };
              if (v instanceof Data_Either.Right) {
                  return function __do() {
                      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#code_textarea"))(Control_Monad_Eff_JQuery.setValue(v.value0))();
                      return Control_Monad_Eff_Uncurried.runEffFn2(setupEditor)(exportedFunctions)(backend)();
                  };
              };
              throw new Error("Failed pattern match at Main line 98, column 5 - line 104, column 56: " + [ v.constructor.name ]);
          });
      };
  });
  var withSession = Control_Monad_Eff_Uncurried.mkEffFn1(function (sessionId) {
      return function __do() {
          var v = tryRestoreCachedCodeMaybe(sessionId)();
          if (v instanceof Data_Maybe.Just) {
              return Control_Monad_Eff_Uncurried.runEffFn2(setupEditor)(exportedFunctions)(getBackendFromString(v.value0))();
          };
          if (v instanceof Data_Maybe.Nothing) {
              var v1 = Data_Functor.map(Control_Monad_Eff.functorEff)(function ($112) {
                  return getBackendFromString(Data_Maybe.fromMaybe("core")($112));
              })(getQueryStringMaybe("backend"))();
              var v2 = Data_Functor.map(Control_Monad_Eff.functorEff)(Data_Maybe.fromMaybe(v1.mainGist))(getQueryStringMaybe("gist"))();
              return Control_Monad_Eff_Uncurried.runEffFn2(loadFromGist)(v2)(v1)();
          };
          throw new Error("Failed pattern match at Main line 112, column 3 - line 117, column 37: " + [ v.constructor.name ]);
      };
  });
  var main = Control_Monad_Eff_JQuery.ready(function __do() {
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#showjs"))(Control_Monad_Eff_JQuery.on("change")(function (e) {
          return function (v) {
              return Control_Monad_Eff_Uncurried.runEffFn1($foreign.compile)(exportedFunctions);
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#compile_label"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return Control_Monad_Eff_Uncurried.runEffFn1($foreign.compile)(exportedFunctions);
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("input[name=view_mode]"))(Control_Monad_Eff_JQuery.on("change")(function (v) {
          return function (jq) {
              return Control_Monad_Eff_Uncurried.runEffFn1(changeViewMode)(jq);
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#gist_save"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return publishNewGist;
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#hamburger"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#menu"))(Control_Monad_Eff_JQuery.toggleClass("show"));
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_mode_label"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#view_mode"))(Control_Monad_Eff_JQuery.toggleClass("show-sub-menu"));
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#backend_label"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#backend"))(Control_Monad_Eff_JQuery.toggleClass("show-sub-menu"));
          };
      }))();
      Control_Bind.bind(Control_Monad_Eff.bindEff)(Control_Monad_Eff_JQuery.select("#editor_view"))(Control_Monad_Eff_JQuery.on("click")(function (e) {
          return function (v) {
              return hideMenus;
          };
      }))();
      return Control_Monad_Eff_Uncurried.runEffFn1(setupSession)(withSession)();
  });
  exports["ExportedFunctions"] = ExportedFunctions;
  exports["exportedFunctions"] = exportedFunctions;
  exports["getGistByIdContT"] = getGistByIdContT;
  exports["setupEditor"] = setupEditor;
  exports["defaultBundleAndExecute"] = defaultBundleAndExecute;
  exports["bundleAndExecuteThermite"] = bundleAndExecuteThermite;
  exports["loadFromGist"] = loadFromGist;
  exports["tryRestoreCachedCodeMaybe"] = tryRestoreCachedCodeMaybe;
  exports["withSession"] = withSession;
  exports["getContT"] = getContT;
  exports["uploadGistContT"] = uploadGistContT;
  exports["randomGuid"] = randomGuid;
  exports["publishNewGist"] = publishNewGist;
  exports["setupSession"] = setupSession;
  exports["tryLoadFileFromGistContT"] = tryLoadFileFromGistContT;
  exports["getQueryStringMaybe"] = getQueryStringMaybe;
  exports["getValueMaybe"] = getValueMaybe;
  exports["hideMenus"] = hideMenus;
  exports["changeViewMode"] = changeViewMode;
  exports["loadOptions"] = loadOptions;
  exports["JS"] = JS;
  exports["getJS"] = getJS;
  exports["BackendConfig"] = BackendConfig;
  exports["Core"] = Core;
  exports["Thermite"] = Thermite;
  exports["Slides"] = Slides;
  exports["Mathbox"] = Mathbox;
  exports["Behaviors"] = Behaviors;
  exports["Flare"] = Flare;
  exports["backendFromString"] = backendFromString;
  exports["backendToString"] = backendToString;
  exports["getBackend"] = getBackend;
  exports["getBackendFromString"] = getBackendFromString;
  exports["main"] = main;
  exports["eqBackend"] = eqBackend;
  exports["ordBackend"] = ordBackend;
  exports["getGistById"] = $foreign.getGistById;
  exports["get"] = $foreign.get;
  exports["cacheCurrentCode"] = $foreign.cacheCurrentCode;
  exports["compile"] = $foreign.compile;
  exports["execute"] = $foreign.execute;
  exports["uploadGist"] = $foreign.uploadGist;
  exports["setupEditorWith"] = $foreign.setupEditorWith;
  exports["tryLoadFileFromGist"] = $foreign.tryLoadFileFromGist;
  exports["tryRestoreCachedCode"] = $foreign.tryRestoreCachedCode;
  exports["getQueryString"] = $foreign.getQueryString;
  exports["setQueryString"] = $foreign.setQueryString;
  exports["click"] = $foreign.click;
  exports["filter"] = $foreign.filter;
  exports["getValue"] = $foreign.getValue;
  exports["navigateTo"] = $foreign.navigateTo;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
